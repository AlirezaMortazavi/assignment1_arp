# Drone Simulation System

## Authors
- Seyed Alireza Mortazavi
- Pezhman Rezaei Salkhori (AMPER group)

## Overview

This project simulates a drone operation environment, integrating multiple components for real-time control, monitoring, and management. It utilizes shared memory for efficient inter-process communication, enabling real-time updates and control flows between a simulated drone, control server, keyboard manager, graphical window interface, and a watchdog for system stability. The logging mechanism ensures operations are recorded for debugging or analysis. Signal handling provides graceful startup, shutdown, and error handling.

## Components

### Drone Simulation
The Drone component is the heart of the system, simulating the drone's operational behaviors. It communicates with other components via shared memory, updating its position based on user inputs. Signal handling ensures graceful termination and logging provides insights into execution and behavior.

### Master
Acts as the central control unit, managing the startup, operation, and shutdown of the simulation. It logs process information, handles signals for controlled shutdown, and ensures a coordinated end to the system's operation.

### Server
Creates shared memory for communication and initializes a server socket for client connections. It handles signals and errors, ensuring resources are cleaned up upon termination.

### Keyboard Manager
Processes user inputs to control the drone's movement, applying physics-based calculations. It ensures safe operation through signal handling and logs actions for analysis.

### Window
Utilizes NCurses for the graphical interface, displaying drone positions and capturing user inputs. It integrates inter-process communication and signal handling for efficient operation.

### Watchdog
Monitors process activity, ensuring continuous operation by terminating inactive processes. It serves as a mechanism for maintaining system stability.

## Prerequisites

- Linux-based operating system
- GCC compiler
- `ncurses` library installed (for window component visualization)

## Installation

Clone the repository:

```sh
git clone https://github.com/AlirezaMortazavi/dronesimulation.git
